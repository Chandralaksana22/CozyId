{"ast":null,"code":"import _typeof from \"/media/chandra/Panglima Tempur/Data Pribadi/Pelajaran/Semester 8/miniproject/cozyid/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport { ApolloLink, Observable } from 'apollo-link';\n\nvar sha256 = require('hash.js/lib/hash/sha/256');\n\nimport { print } from 'graphql/language/printer';\nexport var VERSION = 1;\nexport var defaultGenerateHash = function defaultGenerateHash(query) {\n  return sha256().update(print(query)).digest('hex');\n};\nexport var defaultOptions = {\n  generateHash: defaultGenerateHash,\n  disable: function disable(_a) {\n    var graphQLErrors = _a.graphQLErrors,\n        operation = _a.operation;\n\n    if (graphQLErrors && graphQLErrors.some(function (_a) {\n      var message = _a.message;\n      return message === 'PersistedQueryNotSupported';\n    })) {\n      return true;\n    }\n\n    var response = operation.getContext().response;\n\n    if (response && response.status && (response.status === 400 || response.status === 500)) {\n      return true;\n    }\n\n    return false;\n  },\n  useGETForHashedQueries: false\n};\n\nfunction definitionIsMutation(d) {\n  return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n}\n\nfunction operationIsQuery(operation) {\n  return !operation.query.definitions.some(definitionIsMutation);\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar hashesKeyString = '__createPersistedQueryLink_hashes';\nvar hashesKey = typeof Symbol === 'function' ? Symbol.for(hashesKeyString) : hashesKeyString;\nvar nextHashesChildKey = 0;\nexport var createPersistedQueryLink = function createPersistedQueryLink(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _a = Object.assign({}, defaultOptions, options),\n      generateHash = _a.generateHash,\n      disable = _a.disable,\n      useGETForHashedQueries = _a.useGETForHashedQueries;\n\n  var supportsPersistedQueries = true;\n  var hashesChildKey = 'forLink' + nextHashesChildKey++;\n\n  function getQueryHash(query) {\n    if (!query || _typeof(query) !== 'object') {\n      return generateHash(query);\n    }\n\n    if (!hasOwnProperty.call(query, hashesKey)) {\n      Object.defineProperty(query, hashesKey, {\n        value: Object.create(null),\n        enumerable: false\n      });\n    }\n\n    var hashes = query[hashesKey];\n    return hasOwnProperty.call(hashes, hashesChildKey) ? hashes[hashesChildKey] : hashes[hashesChildKey] = generateHash(query);\n  }\n\n  return new ApolloLink(function (operation, forward) {\n    if (!forward) {\n      throw new Error('PersistedQueryLink cannot be the last link in the chain.');\n    }\n\n    var query = operation.query;\n    var hashError;\n\n    if (supportsPersistedQueries) {\n      try {\n        operation.extensions.persistedQuery = {\n          version: VERSION,\n          sha256Hash: getQueryHash(query)\n        };\n      } catch (e) {\n        hashError = e;\n      }\n    }\n\n    return new Observable(function (observer) {\n      if (hashError) {\n        observer.error(hashError);\n        return;\n      }\n\n      var subscription;\n      var retried = false;\n      var originalFetchOptions;\n      var setFetchOptions = false;\n\n      var retry = function retry(_a, cb) {\n        var response = _a.response,\n            networkError = _a.networkError;\n\n        if (!retried && (response && response.errors || networkError)) {\n          retried = true;\n          supportsPersistedQueries = !disable({\n            response: response,\n            networkError: networkError,\n            operation: operation,\n            graphQLErrors: response && response.errors || void 0\n          });\n\n          if (response && response.errors && response.errors.some(function (_a) {\n            var message = _a.message;\n            return message === 'PersistedQueryNotFound';\n          }) || !supportsPersistedQueries) {\n            if (subscription) subscription.unsubscribe();\n            operation.setContext({\n              http: {\n                includeQuery: true,\n                includeExtensions: supportsPersistedQueries\n              }\n            });\n\n            if (setFetchOptions) {\n              operation.setContext({\n                fetchOptions: originalFetchOptions\n              });\n            }\n\n            subscription = forward(operation).subscribe(handler);\n            return;\n          }\n        }\n\n        cb();\n      };\n\n      var handler = {\n        next: function next(response) {\n          retry({\n            response: response\n          }, function () {\n            return observer.next(response);\n          });\n        },\n        error: function error(networkError) {\n          retry({\n            networkError: networkError\n          }, function () {\n            return observer.error(networkError);\n          });\n        },\n        complete: observer.complete.bind(observer)\n      };\n      operation.setContext({\n        http: {\n          includeQuery: !supportsPersistedQueries,\n          includeExtensions: supportsPersistedQueries\n        }\n      });\n\n      if (useGETForHashedQueries && supportsPersistedQueries && operationIsQuery(operation)) {\n        operation.setContext(function (_a) {\n          var _b = _a.fetchOptions,\n              fetchOptions = _b === void 0 ? {} : _b;\n          originalFetchOptions = fetchOptions;\n          return {\n            fetchOptions: Object.assign({}, fetchOptions, {\n              method: 'GET'\n            })\n          };\n        });\n        setFetchOptions = true;\n      }\n\n      subscription = forward(operation).subscribe(handler);\n      return function () {\n        if (subscription) subscription.unsubscribe();\n      };\n    });\n  });\n};","map":{"version":3,"mappings":";;;;;AAAA,SAASA,UAAT,EAAqBC,UAArB,QAAkD,aAAlD;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AACA,SAASC,KAAT,QAAsB,0BAAtB;AAQA,OAAO,IAAMC,OAAO,GAAG,CAAhB;AAiBP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAoB;EACrD,aAAM,GACHC,MADH,CACUJ,KAAK,CAACG,KAAD,CADf,EAEGE,MAFH,CAEU,KAFV;AAEgB,CAHX;AAKP,OAAO,IAAMC,cAAc,GAAG;EAC5BC,YAAY,EAAEL,mBADc;EAE5BM,OAAO,EAAE,iBAACC,EAAD,EAA4C;QAAzCC,aAAa;QAAEC,SAAS;;IAElC,IACED,aAAa,IACbA,aAAa,CAACE,IAAd,CACE,UAACH,EAAD,EAAY;UAATI,OAAO;MAAO,cAAO,KAAK,4BAAZ;IAAwC,CAD3D,CAFF,EAKE;MACA,OAAO,IAAP;IACD;;IAEO,YAAQ,GAAKF,SAAS,CAACG,UAAV,GAAsBC,QAAnC;;IAGR,IACEA,QAAQ,IACRA,QAAQ,CAACC,MADT,KAECD,QAAQ,CAACC,MAAT,KAAoB,GAApB,IAA2BD,QAAQ,CAACC,MAAT,KAAoB,GAFhD,CADF,EAIE;MACA,OAAO,IAAP;IACD;;IAED,OAAO,KAAP;EACD,CAzB2B;EA0B5BC,sBAAsB,EAAE;AA1BI,CAAvB;;AA6BP,SAASC,oBAAT,CAA8BC,CAA9B,EAA+C;EAC7C,OAAOA,CAAC,CAACC,IAAF,KAAW,qBAAX,IAAoCD,CAAC,CAACR,SAAF,KAAgB,UAA3D;AACD;;AAGD,SAASU,gBAAT,CAA0BV,SAA1B,EAA8C;EAC5C,OAAO,CAACA,SAAS,CAACR,KAAV,CAAgBmB,WAAhB,CAA4BV,IAA5B,CAAiCM,oBAAjC,CAAR;AACD;;AAEO,kBAAc,GAAKK,MAAM,CAACC,SAAP,CAAgBC,cAAnC;AACR,IAAMC,eAAe,GAAG,mCAAxB;AACA,IAAMC,SAAS,GACb,OAAOC,MAAP,KAAkB,UAAlB,GAA+BA,MAAM,CAACC,GAAP,CAAWH,eAAX,CAA/B,GAA6DA,eAD/D;AAEA,IAAII,kBAAkB,GAAG,CAAzB;AAEA,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CACtCC,OADsC,EACE;EAAxC;IAAAA;EAAwC;;EAElC,SAAoDT,MAAM,CAACU,MAAP,CACxD,EADwD,EAExD3B,cAFwD,EAGxD0B,OAHwD,CAApD;EAAA,IAAEzB,YAAY,kBAAd;EAAA,IAAgBC,OAAO,aAAvB;EAAA,IAAyBS,sBAAsB,4BAA/C;;EAKN,IAAIiB,wBAAwB,GAAG,IAA/B;EAEA,IAAMC,cAAc,GAAG,YAAYL,kBAAkB,EAArD;;EACA,SAASM,YAAT,CAAsBjC,KAAtB,EAAyC;IACvC,IAAI,CAACA,KAAD,IAAU,QAAOA,KAAP,MAAiB,QAA/B,EAAyC;MAIvC,OAAOI,YAAY,CAACJ,KAAD,CAAnB;IACD;;IACD,IAAI,CAACsB,cAAc,CAACY,IAAf,CAAoBlC,KAApB,EAA2BwB,SAA3B,CAAL,EAA4C;MAC1CJ,MAAM,CAACe,cAAP,CAAsBnC,KAAtB,EAA6BwB,SAA7B,EAAwC;QACtCY,KAAK,EAAEhB,MAAM,CAACiB,MAAP,CAAc,IAAd,CAD+B;QAEtCC,UAAU,EAAE;MAF0B,CAAxC;IAID;;IACD,IAAMC,MAAM,GAAIvC,KAAa,CAACwB,SAAD,CAA7B;IACA,OAAOF,cAAc,CAACY,IAAf,CAAoBK,MAApB,EAA4BP,cAA5B,IACHO,MAAM,CAACP,cAAD,CADH,GAEFO,MAAM,CAACP,cAAD,CAAN,GAAyB5B,YAAY,CAACJ,KAAD,CAF1C;EAGD;;EAED,OAAO,IAAIP,UAAJ,CAAe,UAACe,SAAD,EAAYgC,OAAZ,EAAmB;IACvC,IAAI,CAACA,OAAL,EAAc;MACZ,MAAM,IAAIC,KAAJ,CACJ,0DADI,CAAN;IAGD;;IAEO,SAAK,GAAKjC,SAAS,MAAnB;IAER,IAAIkC,SAAJ;;IACA,IAAIX,wBAAJ,EAA8B;MAC5B,IAAI;QACFvB,SAAS,CAACmC,UAAV,CAAqBC,cAArB,GAAsC;UACpCC,OAAO,EAAE/C,OAD2B;UAEpCgD,UAAU,EAAEb,YAAY,CAACjC,KAAD;QAFY,CAAtC;MAID,CALD,CAKE,OAAO+C,CAAP,EAAU;QACVL,SAAS,GAAGK,CAAZ;MACD;IACF;;IAED,OAAO,IAAIrD,UAAJ,CAAe,oBAAQ;MAC5B,IAAIgD,SAAJ,EAAe;QACbM,QAAQ,CAACC,KAAT,CAAeP,SAAf;QACA;MACD;;MAED,IAAIQ,YAAJ;MACA,IAAIC,OAAO,GAAG,KAAd;MACA,IAAIC,oBAAJ;MACA,IAAIC,eAAe,GAAG,KAAtB;;MACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CACZhD,EADY,EAKZiD,EALY,EAKE;YAHZ3C,QAAQ;YACR4C,YAAY;;QAId,IAAI,CAACL,OAAD,KAAcvC,QAAQ,IAAIA,QAAQ,CAAC6C,MAAtB,IAAiCD,YAA9C,CAAJ,EAAiE;UAC/DL,OAAO,GAAG,IAAV;UAGApB,wBAAwB,GAAG,CAAC1B,OAAO,CAAC;YAClCO,QAAQ,UAD0B;YAElC4C,YAAY,cAFsB;YAGlChD,SAAS,WAHyB;YAIlCD,aAAa,EACVK,QAAQ,IAAKA,QAAQ,CAAC6C,MAAvB,IAAqD,KAAK;UAL1B,CAAD,CAAnC;;UASA,IACG7C,QAAQ,IACPA,QAAQ,CAAC6C,MADV,IAEC7C,QAAQ,CAAC6C,MAAT,CAAgBhD,IAAhB,CACE,UAACH,EAAD,EAAY;gBAATI,OAAO;YAAO,cAAO,KAAK,wBAAZ;UAAoC,CADvD,CAFF,IAKA,CAACqB,wBANH,EAOE;YAEA,IAAImB,YAAJ,EAAkBA,YAAY,CAACQ,WAAb;YAElBlD,SAAS,CAACmD,UAAV,CAAqB;cACnBC,IAAI,EAAE;gBACJC,YAAY,EAAE,IADV;gBAEJC,iBAAiB,EAAE/B;cAFf;YADa,CAArB;;YAMA,IAAIsB,eAAJ,EAAqB;cACnB7C,SAAS,CAACmD,UAAV,CAAqB;gBAAEI,YAAY,EAAEX;cAAhB,CAArB;YACD;;YACDF,YAAY,GAAGV,OAAO,CAAChC,SAAD,CAAP,CAAmBwD,SAAnB,CAA6BC,OAA7B,CAAf;YAEA;UACD;QACF;;QACDV,EAAE;MACH,CA9CD;;MA+CA,IAAMU,OAAO,GAAG;QACdC,IAAI,EAAE,cAACtD,QAAD,EAA0B;UAC9B0C,KAAK,CAAC;YAAE1C,QAAQ;UAAV,CAAD,EAAe;YAAM,eAAQ,CAACsD,IAAT,CAActD,QAAd;UAAuB,CAA5C,CAAL;QACD,CAHa;QAIdqC,KAAK,EAAE,eAACO,YAAD,EAAoB;UACzBF,KAAK,CAAC;YAAEE,YAAY;UAAd,CAAD,EAAmB;YAAM,eAAQ,CAACP,KAAT,CAAeO,YAAf;UAA4B,CAArD,CAAL;QACD,CANa;QAOdW,QAAQ,EAAEnB,QAAQ,CAACmB,QAAT,CAAkBC,IAAlB,CAAuBpB,QAAvB;MAPI,CAAhB;MAWAxC,SAAS,CAACmD,UAAV,CAAqB;QACnBC,IAAI,EAAE;UACJC,YAAY,EAAE,CAAC9B,wBADX;UAEJ+B,iBAAiB,EAAE/B;QAFf;MADa,CAArB;;MAUA,IACEjB,sBAAsB,IACtBiB,wBADA,IAEAb,gBAAgB,CAACV,SAAD,CAHlB,EAIE;QACAA,SAAS,CAACmD,UAAV,CAAqB,UAACrD,EAAD,EAAsB;cAAnB+D;cAAAN,YAAY,mBAAG,EAAH,GAAKM;UACvCjB,oBAAoB,GAAGW,YAAvB;UACA,OAAO;YACLA,YAAY,EAAE3C,MAAM,CAACU,MAAP,CAAc,EAAd,EAAkBiC,YAAlB,EAAgC;cAAEO,MAAM,EAAE;YAAV,CAAhC;UADT,CAAP;QAGD,CALD;QAMAjB,eAAe,GAAG,IAAlB;MACD;;MAEDH,YAAY,GAAGV,OAAO,CAAChC,SAAD,CAAP,CAAmBwD,SAAnB,CAA6BC,OAA7B,CAAf;MAEA,OAAO;QACL,IAAIf,YAAJ,EAAkBA,YAAY,CAACQ,WAAb;MACnB,CAFD;IAGD,CAjGM,CAAP;EAkGD,CAvHM,CAAP;AAwHD,CAtJM","names":["ApolloLink","Observable","sha256","require","print","VERSION","defaultGenerateHash","query","update","digest","defaultOptions","generateHash","disable","_a","graphQLErrors","operation","some","message","getContext","response","status","useGETForHashedQueries","definitionIsMutation","d","kind","operationIsQuery","definitions","Object","prototype","hasOwnProperty","hashesKeyString","hashesKey","Symbol","for","nextHashesChildKey","createPersistedQueryLink","options","assign","supportsPersistedQueries","hashesChildKey","getQueryHash","call","defineProperty","value","create","enumerable","hashes","forward","Error","hashError","extensions","persistedQuery","version","sha256Hash","e","observer","error","subscription","retried","originalFetchOptions","setFetchOptions","retry","cb","networkError","errors","unsubscribe","setContext","http","includeQuery","includeExtensions","fetchOptions","subscribe","handler","next","complete","bind","_b","method"],"sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}