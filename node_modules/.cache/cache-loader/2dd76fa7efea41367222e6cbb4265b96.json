{"remainingRequest":"/media/chandra/Panglima Tempur/Data Pribadi/Pelajaran/miniproject/cozyid/node_modules/graphql-tag/loader.js!/media/chandra/Panglima Tempur/Data Pribadi/Pelajaran/miniproject/cozyid/src/graphql/getAllKos.gql","dependencies":[{"path":"/media/chandra/Panglima Tempur/Data Pribadi/Pelajaran/miniproject/cozyid/src/graphql/getAllKos.gql","mtime":1652912428073},{"path":"/media/chandra/Panglima Tempur/Data Pribadi/Pelajaran/miniproject/cozyid/node_modules/cache-loader/dist/cjs.js","mtime":1652464226000},{"path":"/media/chandra/Panglima Tempur/Data Pribadi/Pelajaran/miniproject/cozyid/node_modules/graphql-tag/loader.js","mtime":1652460077000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICB2YXIgZG9jID0geyJraW5kIjoiRG9jdW1lbnQiLCJkZWZpbml0aW9ucyI6W3sia2luZCI6Ik9wZXJhdGlvbkRlZmluaXRpb24iLCJvcGVyYXRpb24iOiJxdWVyeSIsIm5hbWUiOnsia2luZCI6Ik5hbWUiLCJ2YWx1ZSI6Ik15UXVlcnkifSwidmFyaWFibGVEZWZpbml0aW9ucyI6W10sImRpcmVjdGl2ZXMiOltdLCJzZWxlY3Rpb25TZXQiOnsia2luZCI6IlNlbGVjdGlvblNldCIsInNlbGVjdGlvbnMiOlt7ImtpbmQiOiJGaWVsZCIsIm5hbWUiOnsia2luZCI6Ik5hbWUiLCJ2YWx1ZSI6ImtvcyJ9LCJhcmd1bWVudHMiOltdLCJkaXJlY3RpdmVzIjpbXSwic2VsZWN0aW9uU2V0Ijp7ImtpbmQiOiJTZWxlY3Rpb25TZXQiLCJzZWxlY3Rpb25zIjpbeyJraW5kIjoiRmllbGQiLCJuYW1lIjp7ImtpbmQiOiJOYW1lIiwidmFsdWUiOiJpZCJ9LCJhcmd1bWVudHMiOltdLCJkaXJlY3RpdmVzIjpbXX0seyJraW5kIjoiRmllbGQiLCJuYW1lIjp7ImtpbmQiOiJOYW1lIiwidmFsdWUiOiJuYW1hIn0sImFyZ3VtZW50cyI6W10sImRpcmVjdGl2ZXMiOltdfSx7ImtpbmQiOiJGaWVsZCIsIm5hbWUiOnsia2luZCI6Ik5hbWUiLCJ2YWx1ZSI6InRpcGUifSwiYXJndW1lbnRzIjpbXSwiZGlyZWN0aXZlcyI6W119LHsia2luZCI6IkZpZWxkIiwibmFtZSI6eyJraW5kIjoiTmFtZSIsInZhbHVlIjoic2lzYSJ9LCJhcmd1bWVudHMiOltdLCJkaXJlY3RpdmVzIjpbXX0seyJraW5kIjoiRmllbGQiLCJuYW1lIjp7ImtpbmQiOiJOYW1lIiwidmFsdWUiOiJ0aHVtYm5haWwifSwiYXJndW1lbnRzIjpbXSwiZGlyZWN0aXZlcyI6W119LHsia2luZCI6IkZpZWxkIiwibmFtZSI6eyJraW5kIjoiTmFtZSIsInZhbHVlIjoiYWxhbWF0In0sImFyZ3VtZW50cyI6W10sImRpcmVjdGl2ZXMiOltdfSx7ImtpbmQiOiJGaWVsZCIsIm5hbWUiOnsia2luZCI6Ik5hbWUiLCJ2YWx1ZSI6ImhhcmdhIn0sImFyZ3VtZW50cyI6W10sImRpcmVjdGl2ZXMiOltdfSx7ImtpbmQiOiJGaWVsZCIsIm5hbWUiOnsia2luZCI6Ik5hbWUiLCJ2YWx1ZSI6IkthbWFyX21hbmRpX2RhbGFtIn0sImFyZ3VtZW50cyI6W10sImRpcmVjdGl2ZXMiOltdfSx7ImtpbmQiOiJGaWVsZCIsIm5hbWUiOnsia2luZCI6Ik5hbWUiLCJ2YWx1ZSI6IkthbWFyX21hbmRpX2x1YXIifSwiYXJndW1lbnRzIjpbXSwiZGlyZWN0aXZlcyI6W119LHsia2luZCI6IkZpZWxkIiwibmFtZSI6eyJraW5kIjoiTmFtZSIsInZhbHVlIjoiS3Vsa2FzIn0sImFyZ3VtZW50cyI6W10sImRpcmVjdGl2ZXMiOltdfSx7ImtpbmQiOiJGaWVsZCIsIm5hbWUiOnsia2luZCI6Ik5hbWUiLCJ2YWx1ZSI6IkxlbWFyaSJ9LCJhcmd1bWVudHMiOltdLCJkaXJlY3RpdmVzIjpbXX0seyJraW5kIjoiRmllbGQiLCJuYW1lIjp7ImtpbmQiOiJOYW1lIiwidmFsdWUiOiJUdiJ9LCJhcmd1bWVudHMiOltdLCJkaXJlY3RpdmVzIjpbXX1dfX1dfX1dLCJsb2MiOnsic3RhcnQiOjAsImVuZCI6MTcxfX07CiAgICBkb2MubG9jLnNvdXJjZSA9IHsiYm9keSI6InF1ZXJ5IE15UXVlcnkge1xuICBrb3Mge1xuICAgIGlkXG4gICAgbmFtYVxuICAgIHRpcGVcbiAgICBzaXNhXG4gICAgdGh1bWJuYWlsXG4gICAgYWxhbWF0XG4gICAgaGFyZ2FcbiAgICBLYW1hcl9tYW5kaV9kYWxhbVxuICAgIEthbWFyX21hbmRpX2x1YXJcbiAgICBLdWxrYXNcbiAgICBMZW1hcmlcbiAgICBUdlxuICB9XG59XG4iLCJuYW1lIjoiR3JhcGhRTCByZXF1ZXN0IiwibG9jYXRpb25PZmZzZXQiOnsibGluZSI6MSwiY29sdW1uIjoxfX07CiAgCgogICAgdmFyIG5hbWVzID0ge307CiAgICBmdW5jdGlvbiB1bmlxdWUoZGVmcykgewogICAgICByZXR1cm4gZGVmcy5maWx0ZXIoCiAgICAgICAgZnVuY3Rpb24oZGVmKSB7CiAgICAgICAgICBpZiAoZGVmLmtpbmQgIT09ICdGcmFnbWVudERlZmluaXRpb24nKSByZXR1cm4gdHJ1ZTsKICAgICAgICAgIHZhciBuYW1lID0gZGVmLm5hbWUudmFsdWUKICAgICAgICAgIGlmIChuYW1lc1tuYW1lXSkgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuYW1lc1tuYW1lXSA9IHRydWU7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgKQogICAgfQogIAoKICAgIC8vIENvbGxlY3QgYW55IGZyYWdtZW50L3R5cGUgcmVmZXJlbmNlcyBmcm9tIGEgbm9kZSwgYWRkaW5nIHRoZW0gdG8gdGhlIHJlZnMgU2V0CiAgICBmdW5jdGlvbiBjb2xsZWN0RnJhZ21lbnRSZWZlcmVuY2VzKG5vZGUsIHJlZnMpIHsKICAgICAgaWYgKG5vZGUua2luZCA9PT0gIkZyYWdtZW50U3ByZWFkIikgewogICAgICAgIHJlZnMuYWRkKG5vZGUubmFtZS52YWx1ZSk7CiAgICAgIH0gZWxzZSBpZiAobm9kZS5raW5kID09PSAiVmFyaWFibGVEZWZpbml0aW9uIikgewogICAgICAgIHZhciB0eXBlID0gbm9kZS50eXBlOwogICAgICAgIGlmICh0eXBlLmtpbmQgPT09ICJOYW1lZFR5cGUiKSB7CiAgICAgICAgICByZWZzLmFkZCh0eXBlLm5hbWUudmFsdWUpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKG5vZGUuc2VsZWN0aW9uU2V0KSB7CiAgICAgICAgbm9kZS5zZWxlY3Rpb25TZXQuc2VsZWN0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uKHNlbGVjdGlvbikgewogICAgICAgICAgY29sbGVjdEZyYWdtZW50UmVmZXJlbmNlcyhzZWxlY3Rpb24sIHJlZnMpOwogICAgICAgIH0pOwogICAgICB9CgogICAgICBpZiAobm9kZS52YXJpYWJsZURlZmluaXRpb25zKSB7CiAgICAgICAgbm9kZS52YXJpYWJsZURlZmluaXRpb25zLmZvckVhY2goZnVuY3Rpb24oZGVmKSB7CiAgICAgICAgICBjb2xsZWN0RnJhZ21lbnRSZWZlcmVuY2VzKGRlZiwgcmVmcyk7CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIGlmIChub2RlLmRlZmluaXRpb25zKSB7CiAgICAgICAgbm9kZS5kZWZpbml0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uKGRlZikgewogICAgICAgICAgY29sbGVjdEZyYWdtZW50UmVmZXJlbmNlcyhkZWYsIHJlZnMpOwogICAgICAgIH0pOwogICAgICB9CiAgICB9CgogICAgdmFyIGRlZmluaXRpb25SZWZzID0ge307CiAgICAoZnVuY3Rpb24gZXh0cmFjdFJlZmVyZW5jZXMoKSB7CiAgICAgIGRvYy5kZWZpbml0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uKGRlZikgewogICAgICAgIGlmIChkZWYubmFtZSkgewogICAgICAgICAgdmFyIHJlZnMgPSBuZXcgU2V0KCk7CiAgICAgICAgICBjb2xsZWN0RnJhZ21lbnRSZWZlcmVuY2VzKGRlZiwgcmVmcyk7CiAgICAgICAgICBkZWZpbml0aW9uUmVmc1tkZWYubmFtZS52YWx1ZV0gPSByZWZzOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9KSgpOwoKICAgIGZ1bmN0aW9uIGZpbmRPcGVyYXRpb24oZG9jLCBuYW1lKSB7CiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZG9jLmRlZmluaXRpb25zLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdmFyIGVsZW1lbnQgPSBkb2MuZGVmaW5pdGlvbnNbaV07CiAgICAgICAgaWYgKGVsZW1lbnQubmFtZSAmJiBlbGVtZW50Lm5hbWUudmFsdWUgPT0gbmFtZSkgewogICAgICAgICAgcmV0dXJuIGVsZW1lbnQ7CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gb25lUXVlcnkoZG9jLCBvcGVyYXRpb25OYW1lKSB7CiAgICAgIC8vIENvcHkgdGhlIERvY3VtZW50Tm9kZSwgYnV0IGNsZWFyIG91dCB0aGUgZGVmaW5pdGlvbnMKICAgICAgdmFyIG5ld0RvYyA9IHsKICAgICAgICBraW5kOiBkb2Mua2luZCwKICAgICAgICBkZWZpbml0aW9uczogW2ZpbmRPcGVyYXRpb24oZG9jLCBvcGVyYXRpb25OYW1lKV0KICAgICAgfTsKICAgICAgaWYgKGRvYy5oYXNPd25Qcm9wZXJ0eSgibG9jIikpIHsKICAgICAgICBuZXdEb2MubG9jID0gZG9jLmxvYzsKICAgICAgfQoKICAgICAgLy8gTm93LCBmb3IgdGhlIG9wZXJhdGlvbiB3ZSdyZSBydW5uaW5nLCBmaW5kIGFueSBmcmFnbWVudHMgcmVmZXJlbmNlZCBieQogICAgICAvLyBpdCBvciB0aGUgZnJhZ21lbnRzIGl0IHJlZmVyZW5jZXMKICAgICAgdmFyIG9wUmVmcyA9IGRlZmluaXRpb25SZWZzW29wZXJhdGlvbk5hbWVdIHx8IG5ldyBTZXQoKTsKICAgICAgdmFyIGFsbFJlZnMgPSBuZXcgU2V0KCk7CiAgICAgIHZhciBuZXdSZWZzID0gbmV3IFNldCgpOwoKICAgICAgLy8gSUUgMTEgZG9lc24ndCBzdXBwb3J0ICJuZXcgU2V0KGl0ZXJhYmxlKSIsIHNvIHdlIGFkZCB0aGUgbWVtYmVycyBvZiBvcFJlZnMgdG8gbmV3UmVmcyBvbmUgYnkgb25lCiAgICAgIG9wUmVmcy5mb3JFYWNoKGZ1bmN0aW9uKHJlZk5hbWUpIHsKICAgICAgICBuZXdSZWZzLmFkZChyZWZOYW1lKTsKICAgICAgfSk7CgogICAgICB3aGlsZSAobmV3UmVmcy5zaXplID4gMCkgewogICAgICAgIHZhciBwcmV2UmVmcyA9IG5ld1JlZnM7CiAgICAgICAgbmV3UmVmcyA9IG5ldyBTZXQoKTsKCiAgICAgICAgcHJldlJlZnMuZm9yRWFjaChmdW5jdGlvbihyZWZOYW1lKSB7CiAgICAgICAgICBpZiAoIWFsbFJlZnMuaGFzKHJlZk5hbWUpKSB7CiAgICAgICAgICAgIGFsbFJlZnMuYWRkKHJlZk5hbWUpOwogICAgICAgICAgICB2YXIgY2hpbGRSZWZzID0gZGVmaW5pdGlvblJlZnNbcmVmTmFtZV0gfHwgbmV3IFNldCgpOwogICAgICAgICAgICBjaGlsZFJlZnMuZm9yRWFjaChmdW5jdGlvbihjaGlsZFJlZikgewogICAgICAgICAgICAgIG5ld1JlZnMuYWRkKGNoaWxkUmVmKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIGFsbFJlZnMuZm9yRWFjaChmdW5jdGlvbihyZWZOYW1lKSB7CiAgICAgICAgdmFyIG9wID0gZmluZE9wZXJhdGlvbihkb2MsIHJlZk5hbWUpOwogICAgICAgIGlmIChvcCkgewogICAgICAgICAgbmV3RG9jLmRlZmluaXRpb25zLnB1c2gob3ApOwogICAgICAgIH0KICAgICAgfSk7CgogICAgICByZXR1cm4gbmV3RG9jOwogICAgfQogICAgCiAgICBtb2R1bGUuZXhwb3J0cyA9IGRvYzsKICAgIAogICAgICAgIG1vZHVsZS5leHBvcnRzWyJNeVF1ZXJ5Il0gPSBvbmVRdWVyeShkb2MsICJNeVF1ZXJ5Iik7CiAgICAgICAgCg=="}]}